from stl import mesh
import numpy as np
import cv2

# считываем STL модель
obj = mesh.Mesh.from_file('1.stl')

# разворачиваем все координаты X в один массив numpy
x = np.array([i for i in obj.x])
x = x.ravel()

# разворачиваем все координаты Y в один массив numpy
y = np.array([i for i in obj.y])
y = y.ravel()

# разворачиваем все координаты Z в один массив numpy
z = np.array([i for i in obj.z])
z = z.ravel()

# рассчет смещения для изображения
shift_x = abs(int(min(x)))
shift_y = abs(int(min(y)))
shift_z = abs(int(min(z)))

# смещение изображения из отрицательных координат к натуральным числам
x = [int(i+shift_x) for i in x]
y = [int(i+shift_y) for i in y]
z = [int(i+shift_z) for i in z]

# форматируем контур для openCV
cnt_xy = np.array([list(i) for i in zip(x, y)])
cnt_xy.shape = (int(len(cnt_xy)/3), 3, 2)
print(cnt_xy)

cnt_yz = np.array([list(i) for i in zip(y, z)])
cnt_yz.shape = (int(len(cnt_yz)/3), 3, 2)

cnt_zx = np.array([list(i) for i in zip(z, x)])
cnt_zx.shape = (int(len(cnt_zx)/3), 3, 2)

# рассчет ширины и высоты изображения
img_len_x = abs(int(max(x)))+abs(int(min(x)))+1
img_len_y = abs(int(max(y)))+abs(int(min(y)))+1
img_len_z = abs(int(max(z)))+abs(int(min(z)))+1

# создание пустого изображения
img_xy = np.zeros((img_len_y, img_len_x, 3), np.uint8)
cv2.drawContours(img_xy, cnt_xy, -1, (255, 255, 255), 1)

img_yz = np.zeros((img_len_z, img_len_y, 3), np.uint8)
cv2.drawContours(img_yz, cnt_yz, -1, (255, 255, 255), 1)

img_zx = np.zeros((img_len_x, img_len_z, 3), np.uint8)
cv2.drawContours(img_zx, cnt_zx, -1, (255, 255, 255), 1)

# оттенки серого и поиск контура
gray_xy = cv2.cvtColor(img_xy, cv2.COLOR_BGR2GRAY)
cnts_xy = cv2.findContours(gray_xy, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_NONE)[1]

gray_yz = cv2.cvtColor(img_yz, cv2.COLOR_BGR2GRAY)
cnts_yz = cv2.findContours(gray_yz, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_NONE)[1]

gray_zx = cv2.cvtColor(img_zx, cv2.COLOR_BGR2GRAY)
cnts_zx = cv2.findContours(gray_zx, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_NONE)[1]

cv2.drawContours(img_xy, cnts_xy, -1, (0, 0, 255), 1)
cv2.drawContours(img_yz, cnts_yz, -1, (0, 0, 255), 1)
cv2.drawContours(img_zx, cnts_zx, -1, (0, 0, 255), 1)

cv2.imwrite("img_xy.jpg", img_xy)
cv2.imwrite("img_yz.jpg", img_yz)
cv2.imwrite("img_zx.jpg", img_zx)
