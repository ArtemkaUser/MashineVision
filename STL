from stl import mesh
import numpy as np
import cv2

# точность расчета, где 1 = 1 мм, 10 = 0.1 мм
calculation_accuracy = 10

shift_img = 50
# считываем STL модель
obj = mesh.Mesh.from_file('det_1.stl')

# разворачиваем все координаты X в один массив numpy
x = np.array([i*calculation_accuracy for i in obj.x])

x = x.ravel()

# разворачиваем все координаты Y в один массив numpy
y = np.array([i*calculation_accuracy for i in obj.y])
y = y.ravel()

# разворачиваем все координаты Z в один массив numpy
z = np.array([i*calculation_accuracy for i in obj.z])
z = z.ravel()

# рассчет смещения для изображения
shift_x = abs(int(min(x)))
shift_y = abs(int(min(y)))
shift_z = abs(int(min(z)))

# смещение изображения из отрицательных координат к натуральным числам
x = [int(i+shift_x+shift_img) for i in x]
y = [int(i+shift_y+shift_img) for i in y]
z = [int(i+shift_z+shift_img) for i in z]

# форматируем контур для openCV
cnt_xy = np.array([list(i) for i in zip(x, y)])
cnt_xy.shape = (int(len(cnt_xy)/3), 3, 2)


cnt_yz = np.array([list(i) for i in zip(y, z)])
cnt_yz.shape = (int(len(cnt_yz)/3), 3, 2)

cnt_zx = np.array([list(i) for i in zip(z, x)])
cnt_zx.shape = (int(len(cnt_zx)/3), 3, 2)

# рассчет ширины и высоты изображения
img_len_x = abs(int(max(x)))+abs(int(min(x)))+shift_img*2
img_len_y = abs(int(max(y)))+abs(int(min(y)))+shift_img*2
img_len_z = abs(int(max(z)))+abs(int(min(z)))+shift_img*2

# создание пустого изображения
img_xy = np.zeros((img_len_y, img_len_x, 3), np.uint8)
for i in cnt_xy:
    cv2.fillConvexPoly(img_xy, i, (255, 255, 255))
gray = cv2.cvtColor(img_xy, cv2.COLOR_BGR2GRAY)
cnts = cv2.findContours(gray, cv2.RETR_TREE, cv2.CHAIN_APPROX_NONE)[1]
cv2.drawContours(img_xy, cnts, -1, (0, 0, 255), 0)
img_yz = np.zeros((img_len_z, img_len_y, 3), np.uint8)
for i in cnt_yz:
    cv2.fillConvexPoly(img_yz, i, (255, 255, 255))

img_zx = np.zeros((img_len_x, img_len_z, 3), np.uint8)
for i in cnt_zx:
    cv2.fillConvexPoly(img_zx, i, (255, 255, 255))


cv2.imwrite("img_xy.jpg", img_xy)
cv2.imwrite("img_yz.jpg", img_yz)
cv2.imwrite("img_zx.jpg", img_zx)
